(undo-tree-save-format-version . 1)
"1d3d1a78a19eb4a04b36c1a5305a53c0d06ce988"
[nil nil nil nil (25684 59754 398872 0) 0 nil]
([nil nil (601) nil (25684 59754 398871 0) 0 nil])
([nil nil ((640 . 641) (t 25684 59387 862391 540000)) nil (25684 59754 398871 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 673 . 674) (nil fontified nil 641 . 674) (641 . 674)) nil (25684 59754 398869 0) 0 nil])
([nil nil ((2798 . 2808) (t 25684 59757 479059 448000)) nil (25684 59899 998725 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2804) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) 2808) nil (25684 59899 998724 0) 0 nil])
([nil nil ((2804 . 2822)) nil (25684 59899 998721 0) 0 nil])
([nil nil ((2822 . 2823)) nil (25684 59899 998721 0) 0 nil])
([nil nil ((2823 . 2824)) nil (25684 59899 998721 0) 0 nil])
([nil nil ((2824 . 2825)) nil (25684 59899 998721 0) 0 nil])
([nil nil ((2825 . 2826)) nil (25684 59899 998720 0) 0 nil])
([nil nil ((2826 . 2827)) nil (25684 59899 998720 0) 0 nil])
([nil nil ((2827 . 2829)) nil (25684 59899 998720 0) 0 nil])
([nil nil ((2829 . 2830)) nil (25684 59899 998720 0) 0 nil])
([nil nil ((2830 . 2836)) nil (25684 59899 998720 0) 0 nil])
([nil nil ((2836 . 2837)) nil (25684 59899 998720 0) 0 nil])
([nil nil ((2837 . 2838)) nil (25684 59899 998719 0) 0 nil])
([nil nil ((2838 . 2839)) nil (25684 59899 998719 0) 0 nil])
([nil nil ((2839 . 2840)) nil (25684 59899 998719 0) 0 nil])
([nil nil ((2840 . 2841)) nil (25684 59899 998719 0) 0 nil])
([nil nil ((2841 . 2842)) nil (25684 59899 998719 0) 0 nil])
([nil nil ((2842 . 2860)) nil (25684 59899 998719 0) 0 nil])
([nil nil ((2860 . 2862)) nil (25684 59899 998718 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2861) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 2862) nil (25684 59899 998718 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3030 . 3031) (nil fontified nil 2944 . 3031) (nil fontified nil 2943 . 2944) (nil fontified nil 2890 . 2943) (nil fontified nil 2889 . 2890) (nil fontified nil 2861 . 2889) (2861 . 3031)) nil (25684 59899 998714 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face tree-sitter-hl-face:string)) . -2999) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3000) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3001) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3002) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3003) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("/" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3004) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3005) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("y" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3006) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3007) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3008) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3009) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -3010) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 3011) nil (25684 59899 998711 0) 0 nil])
([nil nil ((2999 . 3000)) nil (25684 59899 998626 0) 0 nil])
([nil nil ((3020 . 3021) 3000) nil (25684 59899 998623 0) 0 nil])
([nil nil ((674 . 675) (t 25684 59901 67523 829000) 670) nil (25684 60296 313145 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 718 . 719) (nil fontified nil 675 . 719) (675 . 719)) nil (25684 60296 313144 0) 0 nil])
([nil nil ((719 . 720)) nil (25684 60296 314089 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4017 . 4018) (nil fontified nil 3863 . 4018) (nil fontified nil 3862 . 3863) (nil fontified nil 3827 . 3862) (nil fontified nil 3826 . 3827) (nil fontified nil 3171 . 3826) (nil fontified nil 3170 . 3171) (nil fontified nil 3126 . 3170) (nil fontified nil 3125 . 3126) (nil fontified nil 3067 . 3125) (3067 . 4018)) nil (25684 60328 405009 0) 0 nil] [nil nil ((nil rear-nonsticky nil 763 . 764) (nil fontified nil 720 . 764) (720 . 764)) ((#("from ranger.core.loader import CommandLoader" 0 4 (fontified nil face tree-sitter-hl-face:keyword) 4 24 (fontified nil) 24 30 (fontified nil face tree-sitter-hl-face:keyword) 30 31 (fontified nil) 31 43 (fontified nil face tree-sitter-hl-face:constructor) 43 44 (fontified nil rear-nonsticky nil face tree-sitter-hl-face:constructor)) . 720) (undo-tree-id251 . -44) (undo-tree-id252 . -44) (nil rear-nonsticky t 763 . 764)) (25684 60296 313142 0) 0 nil])
([nil nil ((#("class compress(Command):
    def execute(self):
        \"\"\" Compress marked files to current directory \"\"\"
        cwd = self.fm.thisdir
        marked_files = cwd.get_selection()

        if not marked_files:
            return

        def refresh(_):
            cwd = self.fm.get_directory(original_path)
            cwd.load_content()

        original_path = cwd.path
        parts = self.line.split()
        au_flags = parts[1:]

        descr = \"compressing files in: \" + os.path.basename(parts[1])
        obj = CommandLoader(args=['apack'] + au_flags + \\
                [os.path.relpath(f.path, cwd.path) for f in marked_files], descr=descr)

        obj.signal_bind('after', refresh)
        self.fm.loader.add(obj)

    def tab(self):
        \"\"\" Complete with current folder name \"\"\"

        extension = ['.zip', '.tar.gz', '.rar', '.7z']
        return ['compress ' + os.path.basename(self.fm.thisdir.path) + ext for ext in extension]" 0 5 (fontified nil face tree-sitter-hl-face:keyword) 5 6 (fontified nil) 6 14 (fontified nil face tree-sitter-hl-face:type) 14 15 (fontified nil) 15 22 (fontified nil face (tree-sitter-hl-face:type\.super tree-sitter-hl-face:constructor)) 22 29 (fontified nil) 29 32 (fontified nil face tree-sitter-hl-face:keyword) 32 33 (fontified nil) 33 40 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 40 41 (fontified nil) 41 45 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable\.parameter)) 45 48 (fontified nil) 48 56 (fontified nil) 56 58 (fontified nil face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 58 59 (fontified nil face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) syntax-table (15)) 59 103 (fontified nil face (tree-sitter-hl-face:doc tree-sitter-hl-face:string)) 103 104 (fontified nil face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) syntax-table (15)) 104 106 (fontified nil face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 106 115 (fontified nil) 115 118 (fontified nil face tree-sitter-hl-face:variable) 118 119 (fontified nil) 119 120 (fontified nil face tree-sitter-hl-face:operator) 120 121 (fontified nil) 121 125 (fontified nil face tree-sitter-hl-face:keyword) 125 126 (fontified nil) 126 128 (fontified nil face tree-sitter-hl-face:property) 128 129 (fontified nil) 129 136 (fontified nil face tree-sitter-hl-face:property) 136 145 (fontified nil) 145 157 (fontified nil face tree-sitter-hl-face:variable) 157 158 (fontified nil) 158 159 (fontified nil face tree-sitter-hl-face:operator) 159 164 (fontified nil) 164 177 (fontified nil face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 177 189 (fontified nil) 189 191 (fontified nil face tree-sitter-hl-face:keyword) 191 192 (fontified nil) 192 195 (fontified nil face tree-sitter-hl-face:operator) 195 222 (fontified nil) 222 228 (fontified nil face tree-sitter-hl-face:keyword) 228 238 (fontified nil) 238 241 (fontified nil face tree-sitter-hl-face:keyword) 241 242 (fontified nil) 242 249 (fontified nil face tree-sitter-hl-face:function) 249 250 (fontified nil) 250 251 (fontified nil face (tree-sitter-hl-face:variable\.parameter tree-sitter-hl-face:constant)) 251 266 (fontified nil) 266 269 (fontified nil face tree-sitter-hl-face:variable) 269 270 (fontified nil) 270 271 (fontified nil face tree-sitter-hl-face:operator) 271 272 (fontified nil) 272 276 (fontified nil face tree-sitter-hl-face:keyword) 276 277 (fontified nil) 277 279 (fontified nil face tree-sitter-hl-face:property) 279 280 (fontified nil) 280 293 (fontified nil face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 293 325 (fontified nil) 325 337 (fontified nil face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 337 349 (fontified nil) 349 362 (fontified nil face tree-sitter-hl-face:variable) 362 363 (fontified nil) 363 364 (fontified nil face tree-sitter-hl-face:operator) 364 369 (fontified nil) 369 373 (fontified nil face tree-sitter-hl-face:property) 373 382 (fontified nil) 382 387 (fontified nil face tree-sitter-hl-face:variable) 387 388 (fontified nil) 388 389 (fontified nil face tree-sitter-hl-face:operator) 389 390 (fontified nil) 390 394 (fontified nil face tree-sitter-hl-face:keyword) 394 395 (fontified nil) 395 399 (fontified nil face tree-sitter-hl-face:property) 399 400 (fontified nil) 400 405 (fontified nil face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 405 416 (fontified nil) 416 424 (fontified nil face tree-sitter-hl-face:variable) 424 425 (fontified nil) 425 426 (fontified nil face tree-sitter-hl-face:operator) 426 433 (fontified nil) 433 434 (fontified nil face tree-sitter-hl-face:number) 434 446 (fontified nil) 446 451 (fontified nil face tree-sitter-hl-face:variable) 451 452 (fontified nil) 452 453 (fontified nil face tree-sitter-hl-face:operator) 453 454 (fontified nil) 454 455 (fontified nil face tree-sitter-hl-face:string) 455 477 (fontified nil face tree-sitter-hl-face:string) 477 478 (fontified nil face tree-sitter-hl-face:string) 478 479 (fontified nil) 479 480 (fontified nil face tree-sitter-hl-face:operator) 480 484 (fontified nil) 484 488 (fontified nil face tree-sitter-hl-face:property) 488 489 (fontified nil) 489 497 (fontified nil face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 497 504 (fontified nil) 504 505 (fontified nil face tree-sitter-hl-face:number) 505 516 (fontified nil) 516 519 (fontified nil face tree-sitter-hl-face:variable) 519 520 (fontified nil) 520 521 (fontified nil face tree-sitter-hl-face:operator) 521 522 (fontified nil) 522 535 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 535 536 (fontified nil) 536 540 (fontified nil face tree-sitter-hl-face:label) 540 541 (fontified nil face tree-sitter-hl-face:operator) 541 542 (fontified nil) 542 543 (fontified nil face tree-sitter-hl-face:string) 543 548 (fontified nil face tree-sitter-hl-face:string) 548 549 (fontified nil face tree-sitter-hl-face:string) 549 551 (fontified nil) 551 552 (fontified nil face tree-sitter-hl-face:operator) 552 562 (fontified nil) 562 563 (fontified nil face tree-sitter-hl-face:operator) 563 586 (fontified nil) 586 590 (fontified nil face tree-sitter-hl-face:property) 590 591 (fontified nil) 591 598 (fontified nil face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 598 601 (fontified nil) 601 605 (fontified nil face tree-sitter-hl-face:property) 605 611 (fontified nil) 611 615 (fontified nil face tree-sitter-hl-face:property) 615 617 (fontified nil) 617 620 (fontified nil face tree-sitter-hl-face:keyword) 620 621 (fontified nil) 621 622 (fontified nil face tree-sitter-hl-face:variable) 622 623 (fontified nil) 623 625 (fontified nil face tree-sitter-hl-face:operator) 625 641 (fontified nil) 641 646 (fontified nil face tree-sitter-hl-face:label) 646 647 (fontified nil face tree-sitter-hl-face:operator) 647 667 (fontified nil) 667 678 (fontified nil face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 678 679 (fontified nil) 679 680 (fontified nil face tree-sitter-hl-face:string) 680 685 (fontified nil face tree-sitter-hl-face:string) 685 686 (fontified nil face tree-sitter-hl-face:string) 686 705 (fontified nil) 705 709 (fontified nil face tree-sitter-hl-face:keyword) 709 710 (fontified nil) 710 712 (fontified nil face tree-sitter-hl-face:property) 712 713 (fontified nil) 713 719 (fontified nil face tree-sitter-hl-face:property) 719 720 (fontified nil) 720 723 (fontified nil face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 723 734 (fontified nil) 734 737 (fontified nil face tree-sitter-hl-face:keyword) 737 738 (fontified nil) 738 741 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 741 742 (fontified nil) 742 746 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable\.parameter)) 746 749 (fontified nil) 749 757 (fontified nil) 757 759 (fontified nil face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 759 760 (fontified nil face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) syntax-table (15)) 760 795 (fontified nil face (tree-sitter-hl-face:doc tree-sitter-hl-face:string)) 795 796 (fontified nil face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) syntax-table (15)) 796 798 (fontified nil face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 798 808 (fontified nil) 808 817 (fontified nil face tree-sitter-hl-face:variable) 817 818 (fontified nil) 818 819 (fontified nil face tree-sitter-hl-face:operator) 819 821 (fontified nil) 821 822 (fontified nil face tree-sitter-hl-face:string) 822 826 (fontified nil face tree-sitter-hl-face:string) 826 827 (fontified nil face tree-sitter-hl-face:string) 827 829 (fontified nil) 829 830 (fontified nil face tree-sitter-hl-face:string) 830 837 (fontified nil face tree-sitter-hl-face:string) 837 838 (fontified nil face tree-sitter-hl-face:string) 838 840 (fontified nil) 840 841 (fontified nil face tree-sitter-hl-face:string) 841 845 (fontified nil face tree-sitter-hl-face:string) 845 846 (fontified nil face tree-sitter-hl-face:string) 846 848 (fontified nil) 848 849 (fontified nil face tree-sitter-hl-face:string) 849 852 (fontified nil face tree-sitter-hl-face:string) 852 853 (fontified nil face tree-sitter-hl-face:string) 853 855 (fontified nil) 855 863 (fontified nil) 863 869 (fontified nil face tree-sitter-hl-face:keyword) 869 871 (fontified nil) 871 872 (fontified nil face tree-sitter-hl-face:string) 872 881 (fontified nil face tree-sitter-hl-face:string) 881 882 (fontified nil face tree-sitter-hl-face:string) 882 883 (fontified nil) 883 884 (fontified nil face tree-sitter-hl-face:operator) 884 888 (fontified nil) 888 892 (fontified nil face tree-sitter-hl-face:property) 892 893 (fontified nil) 893 901 (fontified nil face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 901 902 (fontified nil) 902 906 (fontified nil face tree-sitter-hl-face:keyword) 906 907 (fontified nil) 907 909 (fontified nil face tree-sitter-hl-face:property) 909 910 (fontified nil) 910 917 (fontified nil face tree-sitter-hl-face:property) 917 918 (fontified nil) 918 922 (fontified nil face tree-sitter-hl-face:property) 922 924 (fontified nil) 924 925 (fontified nil face tree-sitter-hl-face:operator) 925 930 (fontified nil) 930 933 (fontified nil face tree-sitter-hl-face:keyword) 933 934 (fontified nil) 934 937 (fontified nil face tree-sitter-hl-face:variable) 937 938 (fontified nil) 938 940 (fontified nil face tree-sitter-hl-face:operator) 940 950 (fontified nil) 950 951 (fontified nil rear-nonsticky nil)) . 3067) (undo-tree-id365 . -950) (undo-tree-id366 . -210) (undo-tree-id367 . -950) (undo-tree-id368 . -855) (undo-tree-id369 . -950) (undo-tree-id370 . -950) (undo-tree-id371 . -863) (undo-tree-id372 . -734) (undo-tree-id373 . -734) (undo-tree-id374 . -950) (undo-tree-id375 . -863) (undo-tree-id376 . -734) (undo-tree-id377 . -734) (undo-tree-id378 . -950) (undo-tree-id379 . -863) (undo-tree-id380 . -734) (undo-tree-id381 . -734) (undo-tree-id382 . -950) (undo-tree-id383 . -863) (undo-tree-id384 . -734) (undo-tree-id385 . -734) (undo-tree-id386 . -950) (undo-tree-id387 . -863) (undo-tree-id388 . -734) (undo-tree-id389 . -734) (undo-tree-id390 . -950) (undo-tree-id391 . -863) (undo-tree-id392 . -734) (undo-tree-id393 . -734) (undo-tree-id394 . -950) (undo-tree-id395 . -950) (undo-tree-id396 . 81) (undo-tree-id397 . -871) (undo-tree-id398 . 1) (undo-tree-id399 . -951) (undo-tree-id400 . 81) (undo-tree-id401 . -871) (undo-tree-id402 . 1) (undo-tree-id403 . -951) (undo-tree-id404 . -950) (undo-tree-id405 . -950) (undo-tree-id406 . -950) (undo-tree-id407 . -863) (undo-tree-id408 . -734) (undo-tree-id409 . -734) (undo-tree-id410 . -950) (undo-tree-id411 . -863) (undo-tree-id412 . -734) (undo-tree-id413 . -734) (undo-tree-id414 . -950) (undo-tree-id415 . -950) (undo-tree-id416 . -950) (nil fontified t 3112 . 3115) (nil fontified t 3108 . 3112) (nil fontified t 3107 . 3108) (nil fontified t 3100 . 3107) (nil fontified t 3099 . 3100) (nil fontified t 3096 . 3099) (nil fontified t 3089 . 3096) (nil fontified t 3082 . 3089) (nil fontified t 3081 . 3082) (nil fontified t 3073 . 3081) (nil fontified t 3072 . 3073) (nil fontified t 3067 . 3072) (nil fontified t 3813 . 3816) (nil fontified t 3809 . 3813) (nil fontified t 3808 . 3809) (nil fontified t 3805 . 3808) (nil fontified t 3804 . 3805) (nil fontified t 3801 . 3804) (nil fontified t 3790 . 3801) (nil fontified t 3787 . 3790) (nil fontified t 3786 . 3787) (nil fontified t 3780 . 3786) (nil fontified t 3779 . 3780) (nil fontified t 3777 . 3779) (nil fontified t 3776 . 3777) (nil fontified t 3772 . 3776) (nil fontified t 3753 . 3772) (nil fontified t 3752 . 3753) (nil fontified t 3747 . 3752) (nil fontified t 3746 . 3747) (nil fontified t 3745 . 3746) (nil fontified t 3734 . 3745) (nil fontified t 3714 . 3734) (nil fontified t 3713 . 3714) (nil fontified t 3708 . 3713) (nil fontified t 3692 . 3708) (nil fontified t 3690 . 3692) (nil fontified t 3689 . 3690) (nil fontified t 3688 . 3689) (nil fontified t 3687 . 3688) (nil fontified t 3684 . 3687) (nil fontified t 3682 . 3684) (nil fontified t 3678 . 3682) (nil fontified t 3672 . 3678) (nil fontified t 3668 . 3672) (nil fontified t 3665 . 3668) (nil fontified t 3658 . 3665) (nil fontified t 3657 . 3658) (nil fontified t 3653 . 3657) (nil fontified t 3630 . 3653) (nil fontified t 3629 . 3630) (nil fontified t 3619 . 3629) (nil fontified t 3618 . 3619) (nil fontified t 3616 . 3618) (nil fontified t 3615 . 3616) (nil fontified t 3610 . 3615) (nil fontified t 3609 . 3610) (nil fontified t 3608 . 3609) (nil fontified t 3607 . 3608) (nil fontified t 3603 . 3607) (nil fontified t 3602 . 3603) (nil fontified t 3589 . 3602) (nil fontified t 3588 . 3589) (nil fontified t 3587 . 3588) (nil fontified t 3586 . 3587) (nil fontified t 3583 . 3586) (nil fontified t 3572 . 3583) (nil fontified t 3571 . 3572) (nil fontified t 3564 . 3571) (nil fontified t 3556 . 3564) (nil fontified t 3555 . 3556) (nil fontified t 3551 . 3555) (nil fontified t 3547 . 3551) (nil fontified t 3546 . 3547) (nil fontified t 3545 . 3546) (nil fontified t 3544 . 3545) (nil fontified t 3522 . 3544) (nil fontified t 3521 . 3522) (nil fontified t 3520 . 3521) (nil fontified t 3519 . 3520) (nil fontified t 3518 . 3519) (nil fontified t 3513 . 3518) (nil fontified t 3501 . 3513) (nil fontified t 3500 . 3501) (nil fontified t 3493 . 3500) (nil fontified t 3492 . 3493) (nil fontified t 3491 . 3492) (nil fontified t 3483 . 3491) (nil fontified t 3472 . 3483) (nil fontified t 3467 . 3472) (nil fontified t 3466 . 3467) (nil fontified t 3462 . 3466) (nil fontified t 3461 . 3462) (nil fontified t 3457 . 3461) (nil fontified t 3456 . 3457) (nil fontified t 3455 . 3456) (nil fontified t 3454 . 3455) (nil fontified t 3449 . 3454) (nil fontified t 3440 . 3449) (nil fontified t 3436 . 3440) (nil fontified t 3431 . 3436) (nil fontified t 3430 . 3431) (nil fontified t 3429 . 3430) (nil fontified t 3416 . 3429) (nil fontified t 3404 . 3416) (nil fontified t 3392 . 3404) (nil fontified t 3360 . 3392) (nil fontified t 3347 . 3360) (nil fontified t 3346 . 3347) (nil fontified t 3344 . 3346) (nil fontified t 3343 . 3344) (nil fontified t 3339 . 3343) (nil fontified t 3338 . 3339) (nil fontified t 3337 . 3338) (nil fontified t 3336 . 3337) (nil fontified t 3333 . 3336) (nil fontified t 3318 . 3333) (nil fontified t 3317 . 3318) (nil fontified t 3316 . 3317) (nil fontified t 3309 . 3316) (nil fontified t 3308 . 3309) (nil fontified t 3305 . 3308) (nil fontified t 3295 . 3305) (nil fontified t 3289 . 3295) (nil fontified t 3262 . 3289) (nil fontified t 3259 . 3262) (nil fontified t 3258 . 3259) (nil fontified t 3256 . 3258) (nil fontified t 3244 . 3256) (nil fontified t 3231 . 3244) (nil fontified t 3226 . 3231) (nil fontified t 3225 . 3226) (nil fontified t 3224 . 3225) (nil fontified t 3212 . 3224) (nil fontified t 3203 . 3212) (nil fontified t 3196 . 3203) (nil fontified t 3195 . 3196) (nil fontified t 3193 . 3195) (nil fontified t 3192 . 3193) (nil fontified t 3188 . 3192) (nil fontified t 3187 . 3188) (nil fontified t 3186 . 3187) (nil fontified t 3185 . 3186) (nil fontified t 3182 . 3185) (nil fontified t 3173 . 3182) (nil fontified t 3171 . 3173) (nil fontified t 3920 . 3922) (nil fontified t 3919 . 3920) (nil fontified t 3916 . 3919) (nil fontified t 3915 . 3916) (nil fontified t 3913 . 3915) (nil fontified t 3912 . 3913) (nil fontified t 3908 . 3912) (nil fontified t 3907 . 3908) (nil fontified t 3905 . 3907) (nil fontified t 3904 . 3905) (nil fontified t 3897 . 3904) (nil fontified t 3896 . 3897) (nil fontified t 3894 . 3896) (nil fontified t 3893 . 3894) (nil fontified t 3889 . 3893) (nil fontified t 3888 . 3889) (nil fontified t 3886 . 3888) (nil fontified t 3885 . 3886) (nil fontified t 3884 . 3885) (nil fontified t 3875 . 3884) (nil fontified t 3865 . 3875) (nil fontified t 3863 . 3865) (nil rear-nonsticky t 4017 . 4018)) nil (25684 60328 405007 0) 0 nil])
nil
([nil nil ((3067 . 3076) 3067) nil (25684 60328 404988 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3072) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -4) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -4) 3076) nil (25684 60328 404987 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3068) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -4) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) 3072) nil (25684 60328 404981 0) 0 nil])
([nil nil ((3068 . 3077)) nil (25684 60328 404972 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3073) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) 3077) nil (25684 60328 404972 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3069) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) 3073) nil (25684 60328 404966 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4019 . 4020) (nil fontified nil 3865 . 4020) (nil fontified nil 3864 . 3865) (nil fontified nil 3829 . 3864) (nil fontified nil 3828 . 3829) (nil fontified nil 3173 . 3828) (nil fontified nil 3172 . 3173) (nil fontified nil 3128 . 3172) (nil fontified nil 3127 . 3128) (nil fontified nil 3069 . 3127) (3069 . 4020)) nil (25684 60328 404958 0) 0 nil])
([nil nil ((4020 . 4040)) nil (25684 60328 404958 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4036) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) 4040) nil (25684 60328 404957 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 5076 . 5077) (nil fontified nil 4145 . 5077) (nil fontified nil 4144 . 4145) (nil fontified nil 4099 . 4144) (nil fontified nil 4098 . 4099) (nil fontified nil 4036 . 4098) (4036 . 5077)) nil (25684 60328 404946 0) 0 nil])
([nil nil ((5077 . 5078)) nil (25684 60366 339872 0) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . -719) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) 720) nil (25684 60371 590090 0) 0 nil] [nil nil ((nil rear-nonsticky nil 844 . 845) (nil fontified nil 720 . 845) (720 . 845) (t 25684 60329 632429 891000)) ((#("from ranger.core.loader import Loadable
from ranger.ext.signals import SignalDispatcher
from ranger.ext.shell_escape import *" 0 4 (fontified nil face tree-sitter-hl-face:keyword) 4 24 (fontified nil) 24 30 (fontified nil face tree-sitter-hl-face:keyword) 30 31 (fontified nil) 31 39 (fontified nil face tree-sitter-hl-face:constructor) 39 40 (fontified nil) 40 44 (fontified nil face tree-sitter-hl-face:keyword) 44 64 (fontified nil) 64 70 (fontified nil face tree-sitter-hl-face:keyword) 70 71 (fontified nil) 71 87 (fontified nil face tree-sitter-hl-face:constructor) 87 88 (fontified nil) 88 92 (fontified nil face tree-sitter-hl-face:keyword) 92 117 (fontified nil) 117 123 (fontified nil face tree-sitter-hl-face:keyword) 123 124 (fontified nil) 124 125 (fontified nil rear-nonsticky nil face tree-sitter-hl-face:operator)) . 720) (undo-tree-id417 . -125) (undo-tree-id418 . -125) (undo-tree-id419 . -125) (undo-tree-id420 . -125) (undo-tree-id421 . -88) (undo-tree-id422 . -125) (undo-tree-id423 . -125) (undo-tree-id424 . -88) (undo-tree-id425 . -125) (undo-tree-id426 . -88) (undo-tree-id427 . -88) (undo-tree-id428 . -88) (undo-tree-id429 . -88) (undo-tree-id430 . -125) (undo-tree-id431 . -88) (undo-tree-id432 . -125) (undo-tree-id433 . -88) (undo-tree-id434 . -125) (undo-tree-id435 . -88) (undo-tree-id436 . -125) (undo-tree-id437 . -88) (undo-tree-id438 . -88) (undo-tree-id439 . -88) (undo-tree-id440 . -88) (undo-tree-id441 . -88) (undo-tree-id442 . -125) (undo-tree-id443 . -88) (undo-tree-id444 . -88) (undo-tree-id445 . -88) (undo-tree-id446 . -125) (undo-tree-id447 . -88) (undo-tree-id448 . -40) (undo-tree-id449 . -87) (undo-tree-id450 . -40) (undo-tree-id451 . -87) (undo-tree-id452 . -40) (undo-tree-id453 . -40) (undo-tree-id454 . -40) (undo-tree-id455 . -40) (undo-tree-id456 . -40) (undo-tree-id457 . -87) (undo-tree-id458 . -40) (undo-tree-id459 . -40) (undo-tree-id460 . -40) (undo-tree-id461 . -87) (undo-tree-id462 . -40) (undo-tree-id463 . -39) (undo-tree-id464 . -39) (undo-tree-id465 . -39) (undo-tree-id466 . -39) (undo-tree-id467 . -88) (undo-tree-id468 . -125) (undo-tree-id469 . -88) (undo-tree-id470 . -88) (undo-tree-id471 . -88) (undo-tree-id472 . -88) (undo-tree-id473 . -125) (undo-tree-id474 . -88) (undo-tree-id475 . -125) (undo-tree-id476 . -88) (undo-tree-id477 . -125) (undo-tree-id478 . -88) (undo-tree-id479 . -125) (undo-tree-id480 . -88) (undo-tree-id481 . -88) (undo-tree-id482 . -88) (undo-tree-id483 . -88) (undo-tree-id484 . -88) (undo-tree-id485 . -125) (undo-tree-id486 . -88) (undo-tree-id487 . -88) (undo-tree-id488 . -88) (undo-tree-id489 . -125) (undo-tree-id490 . -88) (undo-tree-id491 . -40) (undo-tree-id492 . -87) (undo-tree-id493 . -40) (undo-tree-id494 . -87) (undo-tree-id495 . -40) (undo-tree-id496 . -40) (undo-tree-id497 . -40) (undo-tree-id498 . -40) (undo-tree-id499 . -40) (undo-tree-id500 . -87) (undo-tree-id501 . -40) (undo-tree-id502 . -40) (undo-tree-id503 . -40) (undo-tree-id504 . -87) (undo-tree-id505 . -40) (undo-tree-id506 . -39) (undo-tree-id507 . -39) (undo-tree-id508 . -39) (undo-tree-id509 . -39) (undo-tree-id510 . -88) (undo-tree-id511 . -125) (undo-tree-id512 . -88) (undo-tree-id513 . -88) (undo-tree-id514 . -88) (undo-tree-id515 . -88) (undo-tree-id516 . -125) (undo-tree-id517 . -88) (undo-tree-id518 . -125) (undo-tree-id519 . -88) (undo-tree-id520 . -125) (undo-tree-id521 . -88) (undo-tree-id522 . -125) (undo-tree-id523 . -88) (undo-tree-id524 . -88) (undo-tree-id525 . -88) (undo-tree-id526 . -88) (undo-tree-id527 . -88) (undo-tree-id528 . -125) (undo-tree-id529 . -88) (undo-tree-id530 . -88) (undo-tree-id531 . -88) (undo-tree-id532 . -125) (undo-tree-id533 . -88) (undo-tree-id534 . -40) (undo-tree-id535 . -87) (undo-tree-id536 . -40) (undo-tree-id537 . -87) (undo-tree-id538 . -40) (undo-tree-id539 . -40) (undo-tree-id540 . -40) (undo-tree-id541 . -40) (undo-tree-id542 . -40) (undo-tree-id543 . -87) (undo-tree-id544 . -40) (undo-tree-id545 . -40) (undo-tree-id546 . -40) (undo-tree-id547 . -87) (undo-tree-id548 . -40) (undo-tree-id549 . -39) (undo-tree-id550 . -39) (undo-tree-id551 . -39) (undo-tree-id552 . -39) (undo-tree-id553 . -125) (nil fontified t 807 . 808) (nil fontified t 791 . 807) (nil fontified t 790 . 791) (nil fontified t 784 . 790) (nil fontified t 764 . 784) (nil fontified t 760 . 764) (nil fontified t 759 . 760) (nil fontified t 751 . 759) (nil fontified t 750 . 751) (nil fontified t 744 . 750) (nil fontified t 724 . 744) (nil fontified t 720 . 724) (nil rear-nonsticky t 844 . 845) (t 25684 60354 413725 102000)) (25684 60352 758627 0) 0 nil])
nil
nil
